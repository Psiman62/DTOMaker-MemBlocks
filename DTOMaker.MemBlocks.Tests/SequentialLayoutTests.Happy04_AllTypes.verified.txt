// <auto-generated>
// This file was generated by DTOMaker.MemBlocks V0.13
// Warning: Changes made to this file will be lost if re-generated.
// </auto-generated>
#pragma warning disable CS0414
#nullable enable
using System;
namespace MyOrg.Models.MemBlocks
{
    public partial class MyDTO
    {
        private const int BlockSize = 32;
        private readonly Memory<byte> _block;
        public ReadOnlyMemory<byte> Block => _block;
        public MyDTO() => _block = new byte[BlockSize];
        public MyDTO(ReadOnlySpan<byte> source) => _block = source.Slice(0, BlockSize).ToArray();
        // <field-map>
        //  Pos.  Len.  Type        Endian  Name
        //  ----  ----  --------    ------  --------
        //     0     1  Boolean     Little  Field1
        //     1     1  SByte       Little  Field2
        //     2     1  Byte        Little  Field3
        //     4     2  Int16       Little  Field4
        //     6     2  UInt16      Little  Field5
        //     8     4  Int32       Little  Field6
        //    12     4  UInt32      Little  Field7
        //    16     4  Single      Little  Field8
        // </field-map>
        public Boolean Field1
        {
            get => DTOMaker.Runtime.Codec_Boolean_LE.ReadFromSpan(_block.Slice(0, 1).Span);
            set => DTOMaker.Runtime.Codec_Boolean_LE.WriteToSpan(_block.Slice(0, 1).Span, value);
        }
        public SByte Field2
        {
            get => DTOMaker.Runtime.Codec_SByte_LE.ReadFromSpan(_block.Slice(1, 1).Span);
            set => DTOMaker.Runtime.Codec_SByte_LE.WriteToSpan(_block.Slice(1, 1).Span, value);
        }
        public Byte Field3
        {
            get => DTOMaker.Runtime.Codec_Byte_LE.ReadFromSpan(_block.Slice(2, 1).Span);
            set => DTOMaker.Runtime.Codec_Byte_LE.WriteToSpan(_block.Slice(2, 1).Span, value);
        }
        public Int16 Field4
        {
            get => DTOMaker.Runtime.Codec_Int16_LE.ReadFromSpan(_block.Slice(4, 2).Span);
            set => DTOMaker.Runtime.Codec_Int16_LE.WriteToSpan(_block.Slice(4, 2).Span, value);
        }
        public UInt16 Field5
        {
            get => DTOMaker.Runtime.Codec_UInt16_LE.ReadFromSpan(_block.Slice(6, 2).Span);
            set => DTOMaker.Runtime.Codec_UInt16_LE.WriteToSpan(_block.Slice(6, 2).Span, value);
        }
        public Int32 Field6
        {
            get => DTOMaker.Runtime.Codec_Int32_LE.ReadFromSpan(_block.Slice(8, 4).Span);
            set => DTOMaker.Runtime.Codec_Int32_LE.WriteToSpan(_block.Slice(8, 4).Span, value);
        }
        public UInt32 Field7
        {
            get => DTOMaker.Runtime.Codec_UInt32_LE.ReadFromSpan(_block.Slice(12, 4).Span);
            set => DTOMaker.Runtime.Codec_UInt32_LE.WriteToSpan(_block.Slice(12, 4).Span, value);
        }
        public Single Field8
        {
            get => DTOMaker.Runtime.Codec_Single_LE.ReadFromSpan(_block.Slice(16, 4).Span);
            set => DTOMaker.Runtime.Codec_Single_LE.WriteToSpan(_block.Slice(16, 4).Span, value);
        }
    }
}
